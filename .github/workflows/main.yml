name: tools
on: [push, pull_request]

jobs:
  release:
    name: Release
    if: github.ref == 'refs/heads/sven/gcp-functions'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: compile tools
        run: make clean all

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: c${{ github.sha }}
          release_name: Release c${{ github.sha }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        name: release process-version function
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./functions/process-version/process-version.zip
          asset_name: process-version.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1
        name: release check-pkg-updates function
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./functions/check-pkg-updates/check-pkg-updates.zip
          asset_name: check-pkg-updates.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1
        name: release kv-pump function
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./functions/kv-pump/kv-pump.zip
          asset_name: kv-pump.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1
        name: release audit-pump function
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./functions/audit-pump/audit-pump.zip
          asset_name: audit-pump.zip
          asset_content_type: application/zip

      - uses: actions/upload-release-asset@v1
        name: release process-version-host
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/process-version-host
          asset_name: process-version-host
          asset_content_type: application/octet-stream


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: compile tools
        run: make all

      - name: run tests
        run: make test

  lint:
    name: golint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

          name: Publish Docker image

  register_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/process-version/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/tools:c${{ github.sha }}
